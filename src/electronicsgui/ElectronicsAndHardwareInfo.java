/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package electronicsgui;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Season Pathak, Summit Shrestha, Zenith Rajbhandari
 */
public class ElectronicsAndHardwareInfo extends javax.swing.JFrame {

    /**
     * Creates new form ElectronicsAndHardwareInfo
     */
    CardLayout card;
    DefaultTableModel dm;

    public ElectronicsAndHardwareInfo() {
        initComponents();
        //declaring variable for card layout
        card = (CardLayout) mainMenu.getLayout();
    }
    //declaring variables for mouse positions
    int mousePX;
    int mousePY;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userRatingGroup = new javax.swing.ButtonGroup();
        sideMenu = new javax.swing.JPanel();
        title1 = new javax.swing.JLabel();
        title2 = new javax.swing.JLabel();
        title3 = new javax.swing.JLabel();
        title4 = new javax.swing.JLabel();
        dashboardLabel = new javax.swing.JLabel();
        addProductLabel = new javax.swing.JLabel();
        productLabel = new javax.swing.JLabel();
        topMenu = new javax.swing.JPanel();
        closeBtn = new javax.swing.JLabel();
        minimizeBtn = new javax.swing.JLabel();
        userLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        mainMenu = new javax.swing.JPanel();
        dashboardPanel = new javax.swing.JPanel();
        totalProductPanel = new javax.swing.JPanel();
        productNumber = new javax.swing.JLabel();
        productNumberLabel = new javax.swing.JLabel();
        totalCategoriesPanel = new javax.swing.JPanel();
        categoriesNumber = new javax.swing.JLabel();
        categoriesNumberLabel = new javax.swing.JLabel();
        totalStocksPanel = new javax.swing.JPanel();
        stocksNumber = new javax.swing.JLabel();
        stocksNumberLabel = new javax.swing.JLabel();
        totalCustomerPanel = new javax.swing.JPanel();
        customerNumber = new javax.swing.JLabel();
        customerNumberLabel = new javax.swing.JLabel();
        totalStockValuePanel = new javax.swing.JPanel();
        stockValueNumber = new javax.swing.JLabel();
        stockValueNumberLabel = new javax.swing.JLabel();
        refreshBtn = new javax.swing.JButton();
        importMain = new javax.swing.JButton();
        addProdPanel = new javax.swing.JPanel();
        addNewProductTitle = new javax.swing.JLabel();
        productNumLabel = new javax.swing.JLabel();
        productNumTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        productNameLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        productNameTextField = new javax.swing.JTextField();
        brandLabel = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        brandTextField = new javax.swing.JTextField();
        categoryLabel = new javax.swing.JLabel();
        categoryComboBox = new javax.swing.JComboBox<>();
        priceLabel = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        priceTextField = new javax.swing.JTextField();
        totalStocksLabel = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        stocksTextField = new javax.swing.JTextField();
        userRatingLabel = new javax.swing.JLabel();
        userRatingOne = new javax.swing.JRadioButton();
        userRatingTwo = new javax.swing.JRadioButton();
        userRatingThree = new javax.swing.JRadioButton();
        userRatingFour = new javax.swing.JRadioButton();
        userRatingFive = new javax.swing.JRadioButton();
        clearBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        importAddProd = new javax.swing.JButton();
        productPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        titleProduct = new javax.swing.JLabel();
        searchPriceTextField = new javax.swing.JTextField();
        searchCatComboBox = new javax.swing.JComboBox<>();
        searchCatBtn = new javax.swing.JButton();
        searchPriceBtn = new javax.swing.JButton();
        exportBtn = new javax.swing.JButton();
        searchIcon = new javax.swing.JLabel();
        searchIcon1 = new javax.swing.JLabel();
        deleteRow = new javax.swing.JButton();
        sortComboBox = new javax.swing.JComboBox<>();
        sortBtn = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        importTableMenuItem = new javax.swing.JMenuItem();
        exportTableMenuItem = new javax.swing.JMenuItem();
        close = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        addToTableMenuItem = new javax.swing.JMenuItem();
        clearMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        openDocumentationMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Electronics and Harware Management System");
        setLocationByPlatform(true);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        sideMenu.setBackground(new java.awt.Color(51, 51, 51));
        sideMenu.setForeground(new java.awt.Color(255, 255, 255));

        title1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 17)); // NOI18N
        title1.setForeground(new java.awt.Color(255, 255, 255));
        title1.setText("Electronics");

        title2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 17)); // NOI18N
        title2.setForeground(new java.awt.Color(255, 255, 255));
        title2.setText("and");

        title3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 17)); // NOI18N
        title3.setForeground(new java.awt.Color(255, 255, 255));
        title3.setText("Hardware");

        title4.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 17)); // NOI18N
        title4.setForeground(new java.awt.Color(255, 255, 255));
        title4.setText("Management System");

        dashboardLabel.setBackground(new java.awt.Color(0, 153, 0));
        dashboardLabel.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        dashboardLabel.setForeground(new java.awt.Color(255, 255, 255));
        dashboardLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dashboardLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/active.png"))); // NOI18N
        dashboardLabel.setText("Dashboard");
        dashboardLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dashboardLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboardLabel.setOpaque(true);
        dashboardLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardLabelMouseClicked(evt);
            }
        });

        addProductLabel.setBackground(new java.awt.Color(0, 153, 0));
        addProductLabel.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        addProductLabel.setForeground(new java.awt.Color(255, 255, 255));
        addProductLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addProductLabel.setText("Add Products");
        addProductLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addProductLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addProductLabel.setOpaque(true);
        addProductLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addProductLabelMouseClicked(evt);
            }
        });

        productLabel.setBackground(new java.awt.Color(0, 153, 0));
        productLabel.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        productLabel.setForeground(new java.awt.Color(255, 255, 255));
        productLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        productLabel.setText("Products");
        productLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        productLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        productLabel.setOpaque(true);
        productLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout sideMenuLayout = new javax.swing.GroupLayout(sideMenu);
        sideMenu.setLayout(sideMenuLayout);
        sideMenuLayout.setHorizontalGroup(
            sideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboardLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(addProductLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(productLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(sideMenuLayout.createSequentialGroup()
                .addGroup(sideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sideMenuLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(title4))
                    .addGroup(sideMenuLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(title2))
                    .addGroup(sideMenuLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(sideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(title1)
                            .addComponent(title3))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        sideMenuLayout.setVerticalGroup(
            sideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideMenuLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(title1)
                .addGap(0, 0, 0)
                .addComponent(title2)
                .addGap(0, 0, 0)
                .addComponent(title3)
                .addGap(0, 0, 0)
                .addComponent(title4)
                .addGap(72, 72, 72)
                .addComponent(dashboardLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(addProductLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(productLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        topMenu.setBackground(new java.awt.Color(102, 102, 102));

        closeBtn.setFont(new java.awt.Font("sansserif", 0, 40)); // NOI18N
        closeBtn.setForeground(new java.awt.Color(0, 255, 51));
        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/delete.png"))); // NOI18N
        closeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeBtnMouseClicked(evt);
            }
        });

        minimizeBtn.setFont(new java.awt.Font("sansserif", 0, 70)); // NOI18N
        minimizeBtn.setForeground(new java.awt.Color(0, 255, 51));
        minimizeBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimizeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/subtract.png"))); // NOI18N
        minimizeBtn.setToolTipText("");
        minimizeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeBtnMouseClicked(evt);
            }
        });

        userLbl.setFont(new java.awt.Font("OCR A Extended", 0, 15)); // NOI18N
        userLbl.setForeground(new java.awt.Color(0, 0, 102));
        userLbl.setText("Admin\n");
        userLbl.setToolTipText("");
        userLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/user.png"))); // NOI18N
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout topMenuLayout = new javax.swing.GroupLayout(topMenu);
        topMenu.setLayout(topMenuLayout);
        topMenuLayout.setHorizontalGroup(
            topMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topMenuLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(minimizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeBtn)
                .addGap(21, 21, 21))
        );
        topMenuLayout.setVerticalGroup(
            topMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(topMenuLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(minimizeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
            .addComponent(closeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        mainMenu.setBackground(new java.awt.Color(255, 255, 255));
        mainMenu.setLayout(new java.awt.CardLayout());

        dashboardPanel.setBackground(new java.awt.Color(243, 247, 235));

        totalProductPanel.setBackground(new java.awt.Color(255, 102, 102));
        totalProductPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                totalProductPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                totalProductPanelMouseExited(evt);
            }
        });

        productNumber.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 55)); // NOI18N
        productNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        productNumber.setText("N/A");

        productNumberLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 20)); // NOI18N
        productNumberLabel.setText("Total Products");

        javax.swing.GroupLayout totalProductPanelLayout = new javax.swing.GroupLayout(totalProductPanel);
        totalProductPanel.setLayout(totalProductPanelLayout);
        totalProductPanelLayout.setHorizontalGroup(
            totalProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalProductPanelLayout.createSequentialGroup()
                .addComponent(productNumber)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(totalProductPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(productNumberLabel)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        totalProductPanelLayout.setVerticalGroup(
            totalProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalProductPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(productNumber)
                .addGap(18, 18, 18)
                .addComponent(productNumberLabel)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        totalCategoriesPanel.setBackground(new java.awt.Color(102, 255, 255));
        totalCategoriesPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                totalCategoriesPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                totalCategoriesPanelMouseExited(evt);
            }
        });

        categoriesNumber.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 55)); // NOI18N
        categoriesNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        categoriesNumber.setText("N/A");

        categoriesNumberLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 20)); // NOI18N
        categoriesNumberLabel.setText("Total Categories");

        javax.swing.GroupLayout totalCategoriesPanelLayout = new javax.swing.GroupLayout(totalCategoriesPanel);
        totalCategoriesPanel.setLayout(totalCategoriesPanelLayout);
        totalCategoriesPanelLayout.setHorizontalGroup(
            totalCategoriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalCategoriesPanelLayout.createSequentialGroup()
                .addComponent(categoriesNumber)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(totalCategoriesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(categoriesNumberLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        totalCategoriesPanelLayout.setVerticalGroup(
            totalCategoriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalCategoriesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(categoriesNumber)
                .addGap(18, 18, 18)
                .addComponent(categoriesNumberLabel)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        totalStocksPanel.setBackground(new java.awt.Color(153, 153, 255));
        totalStocksPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                totalStocksPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                totalStocksPanelMouseExited(evt);
            }
        });

        stocksNumber.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 55)); // NOI18N
        stocksNumber.setText("N/A");

        stocksNumberLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 20)); // NOI18N
        stocksNumberLabel.setText("Total Stocks");

        javax.swing.GroupLayout totalStocksPanelLayout = new javax.swing.GroupLayout(totalStocksPanel);
        totalStocksPanel.setLayout(totalStocksPanelLayout);
        totalStocksPanelLayout.setHorizontalGroup(
            totalStocksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalStocksPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stocksNumberLabel)
                .addContainerGap(50, Short.MAX_VALUE))
            .addComponent(stocksNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        totalStocksPanelLayout.setVerticalGroup(
            totalStocksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalStocksPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stocksNumber)
                .addGap(18, 18, 18)
                .addComponent(stocksNumberLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        totalCustomerPanel.setBackground(new java.awt.Color(153, 255, 153));
        totalCustomerPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                totalCustomerPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                totalCustomerPanelMouseExited(evt);
            }
        });

        customerNumber.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 55)); // NOI18N
        customerNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        customerNumber.setText("120");

        customerNumberLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 20)); // NOI18N
        customerNumberLabel.setText("Total Customers");

        javax.swing.GroupLayout totalCustomerPanelLayout = new javax.swing.GroupLayout(totalCustomerPanel);
        totalCustomerPanel.setLayout(totalCustomerPanelLayout);
        totalCustomerPanelLayout.setHorizontalGroup(
            totalCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalCustomerPanelLayout.createSequentialGroup()
                .addComponent(customerNumber)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(totalCustomerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(customerNumberLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        totalCustomerPanelLayout.setVerticalGroup(
            totalCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalCustomerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(customerNumber)
                .addGap(18, 18, 18)
                .addComponent(customerNumberLabel)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        totalStockValuePanel.setBackground(new java.awt.Color(204, 255, 102));
        totalStockValuePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                totalStockValuePanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                totalStockValuePanelMouseExited(evt);
            }
        });

        stockValueNumber.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 40)); // NOI18N
        stockValueNumber.setText("N/A");

        stockValueNumberLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        stockValueNumberLabel.setText("Total Stock Value($)");

        javax.swing.GroupLayout totalStockValuePanelLayout = new javax.swing.GroupLayout(totalStockValuePanel);
        totalStockValuePanel.setLayout(totalStockValuePanelLayout);
        totalStockValuePanelLayout.setHorizontalGroup(
            totalStockValuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, totalStockValuePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(totalStockValuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stockValueNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stockValueNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        totalStockValuePanelLayout.setVerticalGroup(
            totalStockValuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalStockValuePanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(stockValueNumber)
                .addGap(28, 28, 28)
                .addComponent(stockValueNumberLabel)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        refreshBtn.setBackground(new java.awt.Color(0, 153, 51));
        refreshBtn.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        refreshBtn.setForeground(new java.awt.Color(255, 255, 255));
        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/refresh.png"))); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        refreshBtn.setBorderPainted(false);
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        importMain.setBackground(new java.awt.Color(255, 51, 51));
        importMain.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        importMain.setForeground(new java.awt.Color(255, 255, 255));
        importMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/import.png"))); // NOI18N
        importMain.setText("Import Table");
        importMain.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        importMain.setBorderPainted(false);
        importMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importMainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dashboardPanelLayout = new javax.swing.GroupLayout(dashboardPanel);
        dashboardPanel.setLayout(dashboardPanelLayout);
        dashboardPanelLayout.setHorizontalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardPanelLayout.createSequentialGroup()
                .addContainerGap(208, Short.MAX_VALUE)
                .addComponent(totalStocksPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111)
                .addComponent(totalStockValuePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardPanelLayout.createSequentialGroup()
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dashboardPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(importMain, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))
                    .addGroup(dashboardPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(totalProductPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(totalCustomerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)))
                .addComponent(totalCategoriesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        dashboardPanelLayout.setVerticalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(dashboardPanelLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(importMain, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalProductPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalCategoriesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalCustomerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(totalStockValuePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalStocksPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41))
            .addGroup(dashboardPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainMenu.add(dashboardPanel, "dashboardCard");

        addProdPanel.setBackground(new java.awt.Color(204, 255, 153));

        addNewProductTitle.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 25)); // NOI18N
        addNewProductTitle.setText("Add a new Product");

        productNumLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        productNumLabel.setText("Product Number:");

        productNumTextField.setBackground(new Color(204,255,153));
        productNumTextField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        productNumTextField.setBorder(null);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOpaque(true);

        productNameLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        productNameLabel.setText("Product Name:");

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setOpaque(true);

        productNameTextField.setBackground(new Color(204,255,152));
        productNameTextField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        productNameTextField.setBorder(null);

        brandLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        brandLabel.setText("Brand/Manufacturer:");

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setOpaque(true);

        brandTextField.setBackground(new Color(204,255,152));
        brandTextField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        brandTextField.setBorder(null);

        categoryLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        categoryLabel.setText("Category:");

        categoryComboBox.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        categoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<--Select-->", "Laptop", "AC", "Heater", "Television", "Fan", "Monitor" }));

        priceLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        priceLabel.setText("Price Per Unit ($):");

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setOpaque(true);

        priceTextField.setBackground(new Color(204,255,152));
        priceTextField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        priceTextField.setBorder(null);

        totalStocksLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        totalStocksLabel.setText("Total Stocks (Units):");

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setOpaque(true);

        stocksTextField.setBackground(new java.awt.Color(204, 255, 152));
        stocksTextField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        stocksTextField.setBorder(null);

        userRatingLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        userRatingLabel.setText("User Rating:");

        userRatingOne.setBackground(new java.awt.Color(204, 255, 152));
        userRatingGroup.add(userRatingOne);
        userRatingOne.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        userRatingOne.setText("1");
        userRatingOne.setName("1"); // NOI18N

        userRatingTwo.setBackground(new java.awt.Color(204, 255, 152));
        userRatingGroup.add(userRatingTwo);
        userRatingTwo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        userRatingTwo.setText("2");
        userRatingTwo.setName("2"); // NOI18N

        userRatingThree.setBackground(new java.awt.Color(204, 255, 152));
        userRatingGroup.add(userRatingThree);
        userRatingThree.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        userRatingThree.setText("3");
        userRatingThree.setName("3"); // NOI18N

        userRatingFour.setBackground(new java.awt.Color(204, 255, 152));
        userRatingGroup.add(userRatingFour);
        userRatingFour.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        userRatingFour.setText("4");
        userRatingFour.setName("4"); // NOI18N

        userRatingFive.setBackground(new java.awt.Color(204, 255, 152));
        userRatingGroup.add(userRatingFive);
        userRatingFive.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        userRatingFive.setText("5");
        userRatingFive.setName("5"); // NOI18N

        clearBtn.setBackground(new java.awt.Color(0, 153, 51));
        clearBtn.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 255, 255));
        clearBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/clear.png"))); // NOI18N
        clearBtn.setText("Clear");
        clearBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        clearBtn.setBorderPainted(false);
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(0, 153, 51));
        addBtn.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/sum.png"))); // NOI18N
        addBtn.setText("Add");
        addBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        addBtn.setBorderPainted(false);
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        importAddProd.setBackground(new java.awt.Color(255, 51, 51));
        importAddProd.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        importAddProd.setForeground(new java.awt.Color(255, 255, 255));
        importAddProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/import.png"))); // NOI18N
        importAddProd.setText("Import Table");
        importAddProd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        importAddProd.setBorderPainted(false);
        importAddProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importAddProdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addProdPanelLayout = new javax.swing.GroupLayout(addProdPanel);
        addProdPanel.setLayout(addProdPanelLayout);
        addProdPanelLayout.setHorizontalGroup(
            addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addProdPanelLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(brandLabel)
                    .addComponent(productNumLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addProdPanelLayout.createSequentialGroup()
                        .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator1)
                            .addComponent(productNumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addComponent(productNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator2)
                            .addComponent(productNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(95, Short.MAX_VALUE))
                    .addGroup(addProdPanelLayout.createSequentialGroup()
                        .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addProdPanelLayout.createSequentialGroup()
                                .addComponent(brandTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(categoryLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addProdPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addProdPanelLayout.createSequentialGroup()
                        .addComponent(addNewProductTitle)
                        .addGap(272, 272, 272))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addProdPanelLayout.createSequentialGroup()
                        .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(userRatingLabel)
                            .addComponent(priceLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addProdPanelLayout.createSequentialGroup()
                                .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(priceTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(totalStocksLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSeparator5)
                                    .addComponent(stocksTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(addProdPanelLayout.createSequentialGroup()
                                .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addProdPanelLayout.createSequentialGroup()
                                        .addComponent(userRatingOne, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(userRatingTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(userRatingThree, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(addProdPanelLayout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addProdPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(userRatingFour, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(userRatingFive, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(addProdPanelLayout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(100, 100, 100))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addProdPanelLayout.createSequentialGroup()
                        .addComponent(importAddProd, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(315, 315, 315))))
        );
        addProdPanelLayout.setVerticalGroup(
            addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addProdPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(addNewProductTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(importAddProd, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addProdPanelLayout.createSequentialGroup()
                        .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(productNumLabel)
                            .addComponent(productNumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addProdPanelLayout.createSequentialGroup()
                        .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(productNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(productNameLabel))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)))
                .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addProdPanelLayout.createSequentialGroup()
                        .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(brandTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(brandLabel))
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(categoryLabel)
                        .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addProdPanelLayout.createSequentialGroup()
                        .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(priceLabel)
                            .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addProdPanelLayout.createSequentialGroup()
                        .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(totalStocksLabel)
                            .addComponent(stocksTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userRatingLabel)
                    .addComponent(userRatingOne)
                    .addComponent(userRatingTwo)
                    .addComponent(userRatingThree)
                    .addComponent(userRatingFour)
                    .addComponent(userRatingFive))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(addProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        userRatingOne.setActionCommand("1");
        userRatingTwo.setActionCommand("2");
        userRatingThree.setActionCommand("3");
        userRatingFour.setActionCommand("4");
        userRatingFive.setActionCommand("5");

        mainMenu.add(addProdPanel, "addProductCard");

        productPanel.setBackground(new java.awt.Color(204, 255, 153));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        productTable.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        productTable.setForeground(new java.awt.Color(102, 102, 102));
        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Number", "Product Name", "Brand/Manufacturer", "Category", "Price", "Total Stocks", "User Rating"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productTable.setSelectionBackground(new java.awt.Color(153, 255, 153));
        productTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        productTable.setShowGrid(false);
        productTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(productTable);
        if (productTable.getColumnModel().getColumnCount() > 0) {
            productTable.getColumnModel().getColumn(0).setResizable(false);
            productTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            productTable.getColumnModel().getColumn(1).setResizable(false);
            productTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            productTable.getColumnModel().getColumn(2).setResizable(false);
            productTable.getColumnModel().getColumn(3).setResizable(false);
            productTable.getColumnModel().getColumn(3).setPreferredWidth(30);
            productTable.getColumnModel().getColumn(4).setResizable(false);
            productTable.getColumnModel().getColumn(4).setPreferredWidth(30);
            productTable.getColumnModel().getColumn(5).setResizable(false);
            productTable.getColumnModel().getColumn(5).setPreferredWidth(30);
            productTable.getColumnModel().getColumn(6).setResizable(false);
            productTable.getColumnModel().getColumn(6).setPreferredWidth(30);
        }

        titleProduct.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 17)); // NOI18N
        titleProduct.setText("Product Details");

        searchPriceTextField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        searchPriceTextField.setText("Search");

        searchCatComboBox.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        searchCatComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<!--Select-->", "Laptop", "AC", "Heater", "Television", "Fan", "Monitor" }));

        searchCatBtn.setBackground(new java.awt.Color(255, 51, 51));
        searchCatBtn.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        searchCatBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchCatBtn.setText("Search By Category");
        searchCatBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchCatBtn.setBorderPainted(false);
        searchCatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCatBtnActionPerformed(evt);
            }
        });

        searchPriceBtn.setBackground(new java.awt.Color(255, 51, 51));
        searchPriceBtn.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        searchPriceBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchPriceBtn.setText("Search Price");
        searchPriceBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchPriceBtn.setBorderPainted(false);
        searchPriceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPriceBtnActionPerformed(evt);
            }
        });

        exportBtn.setBackground(new java.awt.Color(0, 153, 0));
        exportBtn.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        exportBtn.setForeground(new java.awt.Color(255, 255, 255));
        exportBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/export.png"))); // NOI18N
        exportBtn.setText("Export Table");
        exportBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exportBtn.setBorderPainted(false);
        exportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBtnActionPerformed(evt);
            }
        });

        searchIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/search.png"))); // NOI18N

        searchIcon1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/search category.png"))); // NOI18N

        deleteRow.setBackground(new java.awt.Color(0, 153, 0));
        deleteRow.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        deleteRow.setForeground(new java.awt.Color(255, 255, 255));
        deleteRow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/deleteRow.png"))); // NOI18N
        deleteRow.setText("Delete");
        deleteRow.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteRow.setBorderPainted(false);
        deleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRowActionPerformed(evt);
            }
        });

        sortComboBox.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        sortComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<--Select-->", "Product Number", "Price", "Total Stocks" }));

        sortBtn.setBackground(new java.awt.Color(255, 51, 51));
        sortBtn.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        sortBtn.setForeground(new java.awt.Color(255, 255, 255));
        sortBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/sort.png"))); // NOI18N
        sortBtn.setText("Sort");
        sortBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sortBtn.setBorderPainted(false);
        sortBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout productPanelLayout = new javax.swing.GroupLayout(productPanel);
        productPanel.setLayout(productPanelLayout);
        productPanelLayout.setHorizontalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productPanelLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(searchIcon)
                .addGap(0, 0, 0)
                .addComponent(searchPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchPriceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchIcon1)
                .addGap(0, 0, 0)
                .addComponent(searchCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchCatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleProduct)
                .addGap(336, 336, 336))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(sortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sortBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteRow, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exportBtn)
                .addContainerGap())
        );
        productPanelLayout.setVerticalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleProduct)
                .addGap(18, 18, 18)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productPanelLayout.createSequentialGroup()
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchIcon)
                            .addComponent(searchPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(searchCatBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchPriceBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(productPanelLayout.createSequentialGroup()
                        .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(searchIcon1)
                            .addComponent(searchCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(exportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(deleteRow, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(sortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sortBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        mainMenu.add(productPanel, "productCard");

        fileMenu.setText("File");

        importTableMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        importTableMenuItem.setText("Import Table");
        importTableMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importTableMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(importTableMenuItem);

        exportTableMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exportTableMenuItem.setText("Export Table");
        exportTableMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportTableMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exportTableMenuItem);

        close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        fileMenu.add(close);

        menuBar.add(fileMenu);

        editMenu.setText("Edit");

        addToTableMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        addToTableMenuItem.setText("Add to table");
        addToTableMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToTableMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(addToTableMenuItem);

        clearMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        clearMenuItem.setText("Clear");
        clearMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(clearMenuItem);

        menuBar.add(editMenu);

        helpMenu.setText("Help");

        openDocumentationMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        openDocumentationMenuItem.setText("Open Documentation");
        openDocumentationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openDocumentationMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(openDocumentationMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sideMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(topMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(mainMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(sideMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    *This will be used switching panels on hover
     */
    //for opening dashboard panel
    private void dashboardLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardLabelMouseClicked
        // TODO add your handling code here:
        card.show(mainMenu, "dashboardCard");
        dashboardLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/active.png")));
        addProductLabel.setIcon(null);
        productLabel.setIcon(null);
    }//GEN-LAST:event_dashboardLabelMouseClicked
    //end of opeing dashboard panel

    //for opening add product menu
    private void addProductLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addProductLabelMouseClicked
        // TODO add your handling code here:
        card.show(mainMenu, "addProductCard");
        addProductLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/active.png")));
        dashboardLabel.setIcon(null);
        productLabel.setIcon(null);
    }//GEN-LAST:event_addProductLabelMouseClicked
    //end of opening add product menu

    //for product menu panel
    private void productLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productLabelMouseClicked
        // TODO add your handling code here:
        card.show(mainMenu, "productCard");
        productLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/active.png")));
        dashboardLabel.setIcon(null);
        addProductLabel.setIcon(null);
    }//GEN-LAST:event_productLabelMouseClicked
    //end of product menu panel

    /*
    *End of switching panels
     */
    //for close window
    private void closeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBtnMouseClicked
        // TODO add your handling code here:
        close();
    }//GEN-LAST:event_closeBtnMouseClicked

    //fpr minimizing window
    private void minimizeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeBtnMouseClicked
        // TODO add your handling code here:
        setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeBtnMouseClicked

    /*
    *  This will be used for hover effect on panles of dashboard menu
     */
    //for total product panel
    private void totalProductPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalProductPanelMouseEntered
        // TODO add your handling code here:
        totalProductPanel.setBackground(new Color(194, 2, 34));
    }//GEN-LAST:event_totalProductPanelMouseEntered

    private void totalProductPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalProductPanelMouseExited
        // TODO add your handling code here:
        totalProductPanel.setBackground(new Color(255, 102, 102));
    }//GEN-LAST:event_totalProductPanelMouseExited
    //end of total product panel

    //for total categories panel
    private void totalCategoriesPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalCategoriesPanelMouseEntered
        // TODO add your handling code here:
        totalCategoriesPanel.setBackground(new Color(2, 227, 235));
    }//GEN-LAST:event_totalCategoriesPanelMouseEntered

    private void totalCategoriesPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalCategoriesPanelMouseExited
        // TODO add your handling code here:
        totalCategoriesPanel.setBackground(new Color(102, 255, 255));
    }//GEN-LAST:event_totalCategoriesPanelMouseExited
    //end of total categories panel

    //for total stocks panel
    private void totalStocksPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalStocksPanelMouseEntered
        // TODO add your handling code here:
        totalStocksPanel.setBackground(new Color(81, 81, 252));
    }//GEN-LAST:event_totalStocksPanelMouseEntered

    private void totalStocksPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalStocksPanelMouseExited
        // TODO add your handling code here:
        totalStocksPanel.setBackground(new Color(153, 153, 255));
    }//GEN-LAST:event_totalStocksPanelMouseExited
    //end total stocks panel

    //for total customer panel
    private void totalCustomerPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalCustomerPanelMouseEntered
        // TODO add your handling code here:
        totalCustomerPanel.setBackground(new Color(51, 255, 51));
    }//GEN-LAST:event_totalCustomerPanelMouseEntered

    private void totalCustomerPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalCustomerPanelMouseExited
        // TODO add your handling code here:
        totalCustomerPanel.setBackground(new Color(153, 255, 153));
    }//GEN-LAST:event_totalCustomerPanelMouseExited
    //end of total customer panel

    //for total stocks panel
    private void totalStockValuePanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalStockValuePanelMouseEntered
        // TODO add your handling code here:
        totalStockValuePanel.setBackground(new Color(170, 252, 5));
    }//GEN-LAST:event_totalStockValuePanelMouseEntered

    private void totalStockValuePanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalStockValuePanelMouseExited
        // TODO add your handling code here:
        totalStockValuePanel.setBackground(new Color(204, 255, 102));
    }//GEN-LAST:event_totalStockValuePanelMouseExited
    //end of total stocks panel

    /*
    *End of hover effect
     */
    //for refresh of values on dashboard panel
    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_refreshBtnActionPerformed
    //for importing data into table
    private void importMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importMainActionPerformed
        // TODO add your handling code here:
        importTable();
    }//GEN-LAST:event_importMainActionPerformed
    //for clearing function
    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_clearBtnActionPerformed
    //for adding new product 
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        addToTable();
    }//GEN-LAST:event_addBtnActionPerformed
    //for importing data to table using import button on add product panel
    private void importAddProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importAddProdActionPerformed
        // TODO add your handling code here:
        importTable();
    }//GEN-LAST:event_importAddProdActionPerformed
    //for search prive function
    private void searchPriceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPriceBtnActionPerformed
        // TODO add your handling code here:
        int rowCount = productTable.getRowCount();
        int colCount = productTable.getColumnCount();
        Object[] result = new Object[colCount];
        dm = (DefaultTableModel) productTable.getModel();

        ArrayList<Integer> searchPrice = new ArrayList<Integer>();
        for (int i = 0; i < rowCount; i++) {
            searchPrice.add(Integer.parseInt(dm.getValueAt(i, 4).toString()));
        }
        Integer[] arr = searchPrice.toArray(new Integer[0]);
        mergeSort(arr); //merge sort
        if (productTable.getRowCount() != 0) { //for checking if thers any data in the table
            if (!(getSearchPrice() <= 0)) { // checking search price value 
                int index = binarySearch(arr, 0, arr.length - 1, getSearchPrice()); //binary search
                Integer[] sorted = arr;
                int r = 0;
                Object[][] res = new Object[rowCount][colCount];
                ArrayList<Integer> already = new ArrayList<Integer>();
                if (index == -1) {
                    JOptionPane.showMessageDialog(this, "Searched product not found", "Search Failed", JOptionPane.ERROR_MESSAGE);
                } else {
                    for (int i = 0; i < rowCount; i++) {
                        for (int j = 0; j < rowCount; j++) {
                            if (sorted[i] == Integer.parseInt(productTable.getValueAt(j, 4).toString()) && !already.contains(j)) {
                                for (int k = 0; k < colCount; k++) {
                                    res[r][k] = productTable.getValueAt(j, k);
                                }
                                r++;
                                already.add(j);
                            }
                        }
                    }
                    for (int i = 0; i < colCount; i++) {
                        result[i] = res[index][i].toString();
                    }
                    JOptionPane.showMessageDialog(this, Arrays.deepToString(result));
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "The table must first be imported", "Search Failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchPriceBtnActionPerformed
    //end of search price function
    //merge sort function 
    public static void mergeSort(Integer[] arr) {
        if (arr.length <= 1) {
            return;
        }
        Integer leftSideArray[] = new Integer[arr.length / 2];

        Integer rightSideArray[] = new Integer[arr.length - leftSideArray.length];
        for (int i = 0; i < leftSideArray.length; i++) {
            leftSideArray[i] = arr[i];
        }
        for (int j = 0; j < rightSideArray.length; j++) {
            rightSideArray[j] = arr[leftSideArray.length + j];
        }
        mergeSort(leftSideArray);
        mergeSort(rightSideArray);
        merge(leftSideArray, rightSideArray, arr);
    }

    //end of merge sort function
    //merge function
    public static void merge(Integer leftSideArray[], Integer rightSideArray[], Integer sortedArray[]) {
        int leftIndex = 0;
        int rightIndex = 0;
        int sortedIndex = 0;
        while (leftIndex < leftSideArray.length && rightIndex < rightSideArray.length) {

            if (leftSideArray[leftIndex] < rightSideArray[rightIndex]) {
                sortedArray[sortedIndex] = leftSideArray[leftIndex];
                leftIndex++;
            } else {
                sortedArray[sortedIndex] = rightSideArray[rightIndex];
                rightIndex++;
            }
            sortedIndex++;
        }
        while (leftIndex < leftSideArray.length) {
            sortedArray[sortedIndex] = leftSideArray[leftIndex];
            sortedIndex++;
            leftIndex++;
        }
        while (rightIndex < rightSideArray.length) {
            sortedArray[sortedIndex] = rightSideArray[rightIndex];
            sortedIndex++;
            rightIndex++;
        }
    }

    //end of merge function
    //start binary search
    public static int binarySearch(Integer arr[], int low, int high, int pass) {
        int index = -1;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (pass < arr[mid]) {
                high = mid - 1;
            } else if (pass > arr[mid]) {
                low = mid + 1;
            } else {
                index = mid;
                high = mid - 1;
            }
        }
        return index;
    }

    //end of binary search
    //for export function
    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
        // TODO add your handling code here:
        export();
    }//GEN-LAST:event_exportBtnActionPerformed
    /*
        for dragging the frame around the window
     */
    //method to get position where mouse pressed on the frame
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        mousePX = evt.getX();
        mousePY = evt.getY();
    }//GEN-LAST:event_formMousePressed
    /*
    *method to get value of mouse dragged on the frame then
       moving frame along with its position around the window
     */
    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        int cordinateX = evt.getXOnScreen();
        int cordinateY = evt.getYOnScreen();

        this.setLocation(cordinateX - mousePX, cordinateY - mousePY);
    }//GEN-LAST:event_formMouseDragged
    /*
        end dragging the frame around the window
     */
    
    //opening help document
    private void openDocumentationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openDocumentationMenuItemActionPerformed
        // TODO add your handling code here:
        File file = new File("HELP.pdf");
        try {
            Desktop.getDesktop().open(file);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "File not found", "No file", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_openDocumentationMenuItemActionPerformed
    //end help document
    //search by category method
    private void searchCatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCatBtnActionPerformed
        // TODO add your handling code here:
        String catSearch = searchCatComboBox.getSelectedItem().toString();
        Object[] result = new Object[productTable.getColumnCount()];
        LinkedList<String> list = new LinkedList<String>();
        int count = 0;
        if (productTable.getRowCount() != 0) {
            if (searchCatComboBox.getSelectedIndex() != 0) {
                for (int i = 0; i < productTable.getRowCount(); i++) {
                    String searched = productTable.getValueAt(i, 3).toString();
                    if (searched.equals(catSearch)) {
                        for (int j = 0; j < productTable.getColumnCount(); j++) {
                            result[j] = productTable.getValueAt(i, j);
                        }
                        count++;
                        list.add(Arrays.deepToString(result) + "\n");
                    }
                }
                if (count == 0) {
                    JOptionPane.showMessageDialog(this, "Value not found", "Search Failed", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, list);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please Select a category to search", "Search Failed", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Import the table first", "Search Failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchCatBtnActionPerformed
    //end of search by cateogry function
    //function to add product to table using menu item
    private void addToTableMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToTableMenuItemActionPerformed
        // TODO add your handling code here:
        addToTable();
    }//GEN-LAST:event_addToTableMenuItemActionPerformed
    //function to clear input fields using menu item
    private void clearMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearMenuItemActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_clearMenuItemActionPerformed
    //function to import table using menu item
    private void importTableMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importTableMenuItemActionPerformed
        // TODO add your handling code here:
        importTable();
    }//GEN-LAST:event_importTableMenuItemActionPerformed
    //function to export table using menu item
    private void exportTableMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportTableMenuItemActionPerformed
        // TODO add your handling code here:
        export();
    }//GEN-LAST:event_exportTableMenuItemActionPerformed
    //closeing window
    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
        close();
    }//GEN-LAST:event_closeActionPerformed
    //function to delete a selected row
    private void deleteRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRowActionPerformed
        // TODO add your handling code here:
        dm = (DefaultTableModel) productTable.getModel();
        int select = productTable.getSelectedRow();

        if (productTable.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Please Import the table first");
        } else {
            if (select >= 0) {
                dm.removeRow(select);
                refresh();
                JOptionPane.showMessageDialog(this, "Selected Row Deleted", "Delete Failed", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "please select a row to delete", "Delete Failed", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_deleteRowActionPerformed
    //end of delete function
    //function to sort values in table in ascending order
    private void sortBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortBtnActionPerformed
        // TODO add your handling code here:
        int sortType = sortComboBox.getSelectedIndex();
        if (productTable.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Please import the table first", "Sort Product Failed", JOptionPane.ERROR_MESSAGE);
        } else {
            dm = (DefaultTableModel) productTable.getModel();
            switch (sortType) {
                case 1:
                    sort(0);
                    break;

                case 2:
                    sort(4);
                    break;
                case 3:
                    sort(5);
                    break;

                default:
                    JOptionPane.showMessageDialog(this, "Please select a category to search");
            }
        }
    }//GEN-LAST:event_sortBtnActionPerformed
    //method to sort which is called by sortBtnActionPerformed(java.awt.event.ActionEvent evt) 
    public void sort(int value) {
        int rowCount = productTable.getRowCount();
        int colCount = productTable.getColumnCount();
        ArrayList<Integer> unsorted = new ArrayList<Integer>();
        for (int i = 0; i < rowCount; i++) {
            unsorted.add(Integer.parseInt(dm.getValueAt(i, value).toString()));
        }
        Integer[] arr = unsorted.toArray(new Integer[0]);
        mergeSort(arr);
        Integer[] sorted = arr;
        ArrayList<Integer> already = new ArrayList<Integer>();
        int r = 0;
        Object[][] res = new Object[rowCount][colCount];

        for (int i = 0; i < productTable.getRowCount(); i++) {
            for (int j = 0; j < productTable.getRowCount(); j++) {
                if (sorted[i] == Integer.parseInt(productTable.getValueAt(j, value).toString()) && !already.contains(j)) {
                    for (int k = 0; k < productTable.getColumnCount(); k++) {
                        res[r][k] = productTable.getValueAt(j, k);
                    }
                    already.add(j);
                    r++;
                }
            }
        }
        dm.setNumRows(0);
        for (int i = 0; i < rowCount; i++) {
            dm.addRow(new Object[]{null});
            for (int j = 0; j < colCount; j++) {
                productTable.setValueAt(res[i][j], i, j);
            }
        }
        JOptionPane.showMessageDialog(this, sortComboBox.getSelectedItem().toString() + " has been sorted", "Sort Successful", JOptionPane.INFORMATION_MESSAGE);
    }
    //end of sort function
    //implementing getter method
    //getting product number
    public int getProductNumber() {
        try {
            if (Integer.parseInt(productNumTextField.getText()) <= 0 || productNumTextField.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Enter a valid number", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                return 0;
            } else {
                return Integer.parseInt(productNumTextField.getText().trim());
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Characters are not allowed. Please Enter a valid Number", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return 0;
        }
    }
    //getting product name
    public String getProductName() {
        if (productNameTextField.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter product Name", "Add Product Failed", JOptionPane.ERROR_MESSAGE);
            return "0";
        } else {
            return productNameTextField.getText().trim();
        }
    }
    
    //getting brand
    public String getBrand() {
        if (brandTextField.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter brand", "Add Product Failed", JOptionPane.ERROR_MESSAGE);
            return "0";
        } else {
            return brandTextField.getText().trim();
        }
    }
    //getting category
    public String getCategory() {
        if (categoryComboBox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Please Select a valid Category", "Add product Failed", JOptionPane.ERROR_MESSAGE);
            return "0";
        } else {
            return categoryComboBox.getSelectedItem().toString();
        }
    }
    //getting price
    public int getPrice() {
        try {
            if (Integer.parseInt(priceTextField.getText()) <= 0) {
                JOptionPane.showMessageDialog(this, "Invalid Price", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                return 0;
            } else {
                return Integer.parseInt(priceTextField.getText().trim());
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Characters are not allowed. Please Enter a valid price", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return 0;
        }
    }
    //getting total stock
    public int getTotalStock() {
        try {
            if (Integer.parseInt(stocksTextField.getText().trim()) <= 0) {
                JOptionPane.showMessageDialog(this, "Invalid stocks", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                return 0;
            } else {
                return Integer.parseInt(stocksTextField.getText().trim());
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Characters are not allowed. Please Enter a valid stock", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return 0;
        }
    }
    
    //getting user rating
    public String getUserRating() {
        if (userRatingGroup.getSelection() == null) {
            JOptionPane.showMessageDialog(this, "Please select user rating", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return "0";
        } else {
            return userRatingGroup.getSelection().getActionCommand();
        }
    }
    
    //getting search price
    public int getSearchPrice() {
        try {
            if (Integer.parseInt(searchPriceTextField.getText()) <= 0) {
                JOptionPane.showMessageDialog(this, "Invalid Price", "Search Failed", JOptionPane.ERROR_MESSAGE);
                return 0;
            } else {
                return Integer.parseInt(searchPriceTextField.getText().trim());
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Characters are not allowed. Please Enter a valid price", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return 0;
        }
    }
    //end of getter method
    //method to add product
    public void addToTable() {
        dm = (DefaultTableModel) productTable.getModel();
        if (productTable.getRowCount() != 0) {
            //merge sort
            if (!productNumTextField.getText().isEmpty() || !productNameTextField.getText().isEmpty() || !brandTextField.getText().isEmpty()
                    || categoryComboBox.getSelectedIndex() != 0 || !priceTextField.getText().isEmpty() || !stocksTextField.getText().isEmpty() || userRatingGroup.getSelection() != null) {
                if (getProductNumber() != 0 && getPrice() != 0 && !getProductName().equals("0") && !getBrand().equals("0") && !getUserRating().equals("0") && getTotalStock() != 0 && !getCategory().equals("0")) {
                    Object data[] = {getProductNumber(), getProductName(), getBrand(), getCategory(), getPrice(), getTotalStock(), getUserRating()};
                    ArrayList<Integer> searchProdNum = new ArrayList<Integer>();
                    for (int i = 0; i < productTable.getRowCount(); i++) {
                        searchProdNum.add(Integer.parseInt(dm.getValueAt(i, 0).toString()));
                    }
                    Integer[] arr = searchProdNum.toArray(new Integer[0]);
                    mergeSort(arr);
                    int index = binarySearch(arr, 0, arr.length - 1, getProductNumber());
                    if (index == -1) {
                        int nextRow = 0; //to point a row
                        boolean emptyRow = false; //to check if row is empty
                        do {
                            if (productTable.getValueAt(nextRow, 0).toString().length() != 0) {
                                nextRow++;
                            } else {
                                emptyRow = true;
                            }
                        } while (nextRow < productTable.getRowCount() && !emptyRow);
                        dm.addRow(new Object[]{});
                        for (int i = 0; i < productTable.getColumnCount(); i++) {
                            productTable.setValueAt(data[i], nextRow, i);
                        }
                        refresh();
                        JOptionPane.showMessageDialog(this, getProductName() + " Product Has been added Sucessfully", "Add Product Success", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Product already exists", "Add product Failed", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Fill the Form Properly", "Add product Failed", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Import the table.", "Add Product Failed", JOptionPane.ERROR_MESSAGE);
        }
    }

    //end of method to add product
    public void export() {
        File file = new File("Data.txt");
        if (productTable.getRowCount() != 0) {
            try {
                FileWriter fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);

                for (int i = 0; i < productTable.getRowCount(); i++) {
                    for (int j = 0; j < productTable.getColumnCount(); j++) {

                        bw.write(productTable.getValueAt(i, j).toString() + ",");
                    }
                    bw.newLine();
                }
                bw.close();
                fw.close();
                JOptionPane.showMessageDialog(this, "Export Successful!", "Product Detail Export", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(ElectronicsAndHardwareInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Import the table first", "Export Failed", JOptionPane.ERROR_MESSAGE);
        }
    }
    //function to close the window which can be called by other action events
    public void close() {
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Do you want to export before closing?", "Electronics and Hardware Management System", dialogButton);
        if (dialogResult == 0) {
            export();
            System.exit(0);
        } else {
            System.exit(0);
        }
    }
    //function to clear input fields
    public void clear() {
        productNumTextField.setText("");
        productNameTextField.setText("");
        brandTextField.setText("");
        categoryComboBox.setSelectedIndex(0);
        priceTextField.setText("");
        stocksTextField.setText("");
        userRatingGroup.clearSelection();
    }

    //creating method to refresh dashboard value
    public void refresh() {
        dm = (DefaultTableModel) productTable.getModel();
        int value1 = productTable.getRowCount();
        String totalProduct = String.valueOf(value1);
        productNumber.setText(totalProduct);

        int value2 = categoryComboBox.getItemCount() - 1;
        String totalCat = String.valueOf(value2);
        categoriesNumber.setText(totalCat);
        value1 = 0;
        value2 = 0;
        ArrayList<String> stocks = new ArrayList<String>();
        ArrayList<String> price = new ArrayList<String>();
        for (int i = 0; i < productTable.getRowCount(); i++) {
            price.add(dm.getValueAt(i, 4).toString());
            stocks.add(dm.getValueAt(i, 5).toString());
            value1 += Integer.parseInt(price.get(i));
            value2 += Integer.parseInt(stocks.get(i));
        }
        String totalStockValue = String.valueOf(value1);
        stockValueNumber.setText(totalStockValue);
        String totalStocks = String.valueOf(value2);
        stocksNumber.setText(totalStocks);
    }
    //function to import data to table from txt file
    public void importTable() {
        if (productTable.getRowCount() == 0) {
            File file = new File("Data.txt");
            try {
                FileReader fr = new FileReader(file);
                BufferedReader br = new BufferedReader(fr);

                dm = (DefaultTableModel) productTable.getModel();
                Object[] lines = br.lines().toArray();
                for (int i = 0; i < lines.length; i++) {
                    String[] row = lines[i].toString().split(",");
                    dm.addRow(row);
                }
                refresh();
                JOptionPane.showMessageDialog(this, "Import Successful", "Import Product Detail", JOptionPane.INFORMATION_MESSAGE);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ElectronicsAndHardwareInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Data has already been imported into the table", "Import Failed", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElectronicsAndHardwareInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElectronicsAndHardwareInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElectronicsAndHardwareInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElectronicsAndHardwareInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ElectronicsAndHardwareInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel addNewProductTitle;
    private javax.swing.JPanel addProdPanel;
    private javax.swing.JLabel addProductLabel;
    private javax.swing.JMenuItem addToTableMenuItem;
    private javax.swing.JLabel brandLabel;
    private javax.swing.JTextField brandTextField;
    private javax.swing.JLabel categoriesNumber;
    private javax.swing.JLabel categoriesNumberLabel;
    private javax.swing.JComboBox<String> categoryComboBox;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JButton clearBtn;
    private javax.swing.JMenuItem clearMenuItem;
    private javax.swing.JMenuItem close;
    private javax.swing.JLabel closeBtn;
    private javax.swing.JLabel customerNumber;
    private javax.swing.JLabel customerNumberLabel;
    private javax.swing.JLabel dashboardLabel;
    private javax.swing.JPanel dashboardPanel;
    private javax.swing.JButton deleteRow;
    private javax.swing.JMenu editMenu;
    private javax.swing.JButton exportBtn;
    private javax.swing.JMenuItem exportTableMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton importAddProd;
    private javax.swing.JButton importMain;
    private javax.swing.JMenuItem importTableMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JPanel mainMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel minimizeBtn;
    private javax.swing.JMenuItem openDocumentationMenuItem;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JLabel productLabel;
    private javax.swing.JLabel productNameLabel;
    private javax.swing.JTextField productNameTextField;
    private javax.swing.JLabel productNumLabel;
    private javax.swing.JTextField productNumTextField;
    private javax.swing.JLabel productNumber;
    private javax.swing.JLabel productNumberLabel;
    private javax.swing.JPanel productPanel;
    private javax.swing.JTable productTable;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton searchCatBtn;
    private javax.swing.JComboBox<String> searchCatComboBox;
    private javax.swing.JLabel searchIcon;
    private javax.swing.JLabel searchIcon1;
    private javax.swing.JButton searchPriceBtn;
    private javax.swing.JTextField searchPriceTextField;
    private javax.swing.JPanel sideMenu;
    private javax.swing.JButton sortBtn;
    private javax.swing.JComboBox<String> sortComboBox;
    private javax.swing.JLabel stockValueNumber;
    private javax.swing.JLabel stockValueNumberLabel;
    private javax.swing.JLabel stocksNumber;
    private javax.swing.JLabel stocksNumberLabel;
    private javax.swing.JTextField stocksTextField;
    private javax.swing.JLabel title1;
    private javax.swing.JLabel title2;
    private javax.swing.JLabel title3;
    private javax.swing.JLabel title4;
    private javax.swing.JLabel titleProduct;
    private javax.swing.JPanel topMenu;
    private javax.swing.JPanel totalCategoriesPanel;
    private javax.swing.JPanel totalCustomerPanel;
    private javax.swing.JPanel totalProductPanel;
    private javax.swing.JPanel totalStockValuePanel;
    private javax.swing.JLabel totalStocksLabel;
    private javax.swing.JPanel totalStocksPanel;
    private javax.swing.JLabel userLbl;
    private javax.swing.JRadioButton userRatingFive;
    private javax.swing.JRadioButton userRatingFour;
    private javax.swing.ButtonGroup userRatingGroup;
    private javax.swing.JLabel userRatingLabel;
    private javax.swing.JRadioButton userRatingOne;
    private javax.swing.JRadioButton userRatingThree;
    private javax.swing.JRadioButton userRatingTwo;
    // End of variables declaration//GEN-END:variables
}
